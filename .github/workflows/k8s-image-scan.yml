name: Kubernetes Image Vulnerability Scan

on:
  schedule:
    - cron: '0 3 * * *' # Daily at 03:00 UTC
  workflow_dispatch:
    {}

permissions:
  contents: read
  security-events: write

jobs:
  trivy-k8s-scan:
    name: Scan running Kubernetes images (SARIF)
    runs-on: ubuntu-latest
    steps:
      - name: Connect Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:k8s-deploy
          hostname: kreat8s-scan
          use-cache: true

      - name: Install kubectl
        uses: Azure/setup-kubectl@v4.0.1

      - name: Configure kubeconfig from secret
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p "$HOME/.kube"
          echo "$KUBECONFIG" > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"

      - name: Verify cluster access
        run: |
          kubectl version
          kubectl get nodes

      - name: Install Trivy
        shell: bash
        run: |
          set -euo pipefail
          echo "Installing Trivy via official install script..."
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin
          trivy --version

      - name: Collect running images from Kubernetes
        shell: bash
        run: |
          set -euo pipefail
          # Collect images from both initContainers and containers, dedupe, and store
          kubectl get pods --all-namespaces -o jsonpath="{range .items[*]}{.spec.initContainers[*].image}{' '}{.spec.containers[*].image}{' '}{end}" \
            | tr -s ' ' '\n' \
            | sort -u \
            | sed '/^$/d' \
            > k8s-images.txt

      - name: Scan images with Trivy (CRITICAL,HIGH) -> SARIF
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -s k8s-images.txt ]; then
            echo 'No images found to scan. Creating empty SARIF.'
            echo '{"version":"2.1.0","runs":[]}' > trivy-k8s.sarif
            exit 0
          fi

          mapfile -t IMAGES < k8s-images.txt
          echo "Scanning ${#IMAGES[@]} image(s) with Trivy..."
          trivy image \
            --format sarif \
            --output trivy-k8s.sarif \
            --severity CRITICAL,HIGH \
            --ignore-unfixed \
            --scanners vuln \
            --timeout 15m \
            "${IMAGES[@]}"

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-k8s.sarif
          category: k8s-image-scan
